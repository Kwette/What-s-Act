{"ast":null,"code":"import mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'; // [...]\n\nif (mapElement) {\n  // [...]\n  map.addControl(new MapboxGeocoder({\n    accessToken: mapboxgl.accessToken\n  }));\n}\n\nvar mapElement = document.getElementById('map');\n\nvar buildMap = function buildMap() {\n  mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n  return new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/light-v10',\n    properties: {\n      'marker-color': '#60be9f',\n      'marker-size': 'large',\n      'marker-symbol': 'rocket'\n    }\n  });\n};\n\nvar addMarkersToMap = function addMarkersToMap(map, markers) {\n  markers.forEach(function (marker) {\n    var popup = new mapboxgl.Popup().setHTML(marker.infoWindow);\n    new mapboxgl.Marker().setLngLat([marker.lng, marker.lat]).setPopup(popup).addTo(map);\n  });\n};\n\nvar fitMapToMarkers = function fitMapToMarkers(map, markers) {\n  var bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(function (marker) {\n    return bounds.extend([marker.lng, marker.lat]);\n  });\n  map.fitBounds(bounds, {\n    padding: 70,\n    maxZoom: 15\n  });\n};\n\nvar initMapbox = function initMapbox() {\n  if (mapElement) {\n    var _map = buildMap();\n\n    var markers = JSON.parse(mapElement.dataset.markers);\n    addMarkersToMap(_map, markers);\n    fitMapToMarkers(_map, markers);\n  }\n};\n\nexport { initMapbox };","map":{"version":3,"sources":["/Users/Ordinateur/code/Kwette/What-s-Act/app/javascript/plugins/init_mapbox.js"],"names":["mapboxgl","MapboxGeocoder","mapElement","map","addControl","accessToken","document","getElementById","buildMap","dataset","mapboxApiKey","Map","container","style","properties","addMarkersToMap","markers","forEach","marker","popup","Popup","setHTML","infoWindow","Marker","setLngLat","lng","lat","setPopup","addTo","fitMapToMarkers","bounds","LngLatBounds","extend","fitBounds","padding","maxZoom","initMapbox","JSON","parse"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AAIA,OAAOC,cAAP,MAA2B,4BAA3B,C,CACA;;AACA,IAAIC,UAAJ,EAAgB;AACd;AACAC,EAAAA,GAAG,CAACC,UAAJ,CAAe,IAAIH,cAAJ,CAAmB;AAAEI,IAAAA,WAAW,EAAEL,QAAQ,CAACK;AAAxB,GAAnB,CAAf;AACD;;AAGD,IAAMH,UAAU,GAAGI,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBR,EAAAA,QAAQ,CAACK,WAAT,GAAuBH,UAAU,CAACO,OAAX,CAAmBC,YAA1C;AACA,SAAO,IAAIV,QAAQ,CAACW,GAAb,CAAiB;AACtBC,IAAAA,SAAS,EAAE,KADW;AAEtBC,IAAAA,KAAK,EAAE,kCAFe;AAGrBC,IAAAA,UAAU,EAAE;AACX,sBAAgB,SADL;AAEX,qBAAe,OAFJ;AAGX,uBAAiB;AAHN;AAHS,GAAjB,CAAP;AASD,CAXD;;AAaA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACZ,GAAD,EAAMa,OAAN,EAAkB;AACxCA,EAAAA,OAAO,CAACC,OAAR,CAAgB,UAACC,MAAD,EAAY;AAC1B,QAAMC,KAAK,GAAG,IAAInB,QAAQ,CAACoB,KAAb,GAAqBC,OAArB,CAA6BH,MAAM,CAACI,UAApC,CAAd;AACA,QAAItB,QAAQ,CAACuB,MAAb,GACGC,SADH,CACa,CAAEN,MAAM,CAACO,GAAT,EAAcP,MAAM,CAACQ,GAArB,CADb,EAEGC,QAFH,CAEYR,KAFZ,EAIGS,KAJH,CAISzB,GAJT;AAKD,GAPD;AAQD,CATD;;AAWA,IAAM0B,eAAe,GAAG,SAAlBA,eAAkB,CAAC1B,GAAD,EAAMa,OAAN,EAAkB;AACxC,MAAMc,MAAM,GAAG,IAAI9B,QAAQ,CAAC+B,YAAb,EAAf;AACAf,EAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,MAAM;AAAA,WAAIY,MAAM,CAACE,MAAP,CAAc,CAAEd,MAAM,CAACO,GAAT,EAAcP,MAAM,CAACQ,GAArB,CAAd,CAAJ;AAAA,GAAtB;AACAvB,EAAAA,GAAG,CAAC8B,SAAJ,CAAcH,MAAd,EAAsB;AAAEI,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAtB;AACD,CAJD;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAIlC,UAAJ,EAAgB;AACd,QAAMC,IAAG,GAAGK,QAAQ,EAApB;;AACA,QAAMQ,OAAO,GAAGqB,IAAI,CAACC,KAAL,CAAWpC,UAAU,CAACO,OAAX,CAAmBO,OAA9B,CAAhB;AACAD,IAAAA,eAAe,CAACZ,IAAD,EAAMa,OAAN,CAAf;AACAa,IAAAA,eAAe,CAAC1B,IAAD,EAAMa,OAAN,CAAf;AACD;AACF,CAPD;;AAUA,SAASoB,UAAT","sourcesContent":["import mapboxgl from 'mapbox-gl';\n\n\n\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n// [...]\nif (mapElement) {\n  // [...]\n  map.addControl(new MapboxGeocoder({ accessToken: mapboxgl.accessToken }));\n}\n\n\nconst mapElement = document.getElementById('map');\n\nconst buildMap = () => {\n  mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n  return new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/light-v10',\n     properties: {\n      'marker-color': '#60be9f',\n      'marker-size': 'large',\n      'marker-symbol': 'rocket'\n    }\n  });\n};\n\nconst addMarkersToMap = (map, markers) => {\n  markers.forEach((marker) => {\n    const popup = new mapboxgl.Popup().setHTML(marker.infoWindow);\n    new mapboxgl.Marker()\n      .setLngLat([ marker.lng, marker.lat ])\n      .setPopup(popup)\n\n      .addTo(map);\n  });\n};\n\nconst fitMapToMarkers = (map, markers) => {\n  const bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(marker => bounds.extend([ marker.lng, marker.lat ]));\n  map.fitBounds(bounds, { padding: 70, maxZoom: 15 });\n};\n\nconst initMapbox = () => {\n  if (mapElement) {\n    const map = buildMap();\n    const markers = JSON.parse(mapElement.dataset.markers);\n    addMarkersToMap(map, markers);\n    fitMapToMarkers(map, markers);\n  }\n};\n\n\nexport { initMapbox };\n\n"]},"metadata":{},"sourceType":"module"}